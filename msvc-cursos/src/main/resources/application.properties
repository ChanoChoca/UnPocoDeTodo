spring.application.name=msvc-cursos
server.port=${PORT:8002}

# Kafka Configuration
#spring.kafka.bootstrap-servers=my-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
#spring.kafka.consumer.group-id=grupo-cursos
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.LongDeserializer

#Para la comunicación con el microservicio usuarios
ubication=http://msvc-usuarios:8001/usuarios

#Test local
#spring.r2dbc.url=r2dbc:postgresql://localhost:5432/msvc-cursos
#spring.flyway.url=jdbc:postgresql://localhost:5432/msvc-cursos

spring.r2dbc.url=r2dbc:postgresql://postgres16:5432/msvc-cursos
spring.r2dbc.username=postgres
spring.r2dbc.password=postgres

spring.flyway.url=jdbc:postgresql://postgres16:5432/msvc-cursos
spring.flyway.user=postgres
spring.flyway.password=postgres
spring.flyway.locations=classpath:db/migration
spring.flyway.baselineOnMigrate=true

logging.level.io.r2dbc.spi=DEBUG

spring.cloud.kubernetes.secrets.enable-api=true
spring.cloud.kubernetes.discovery.all-namespaces=true

management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.endpoint.metrics.enabled=true
management.endpoint.health.enabled=true
management.metrics.enable.all=true
management.metrics.tags.application=${spring.application.name}
